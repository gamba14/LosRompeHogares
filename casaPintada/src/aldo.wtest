
import pintores.*
import pinturerias.*
import fixture.*
import agencia.*


test "Cuál es la superficie total a pintar para Aldo" {
	assert.equals(41, fixture.aldo().casa().darSuperficie())
}

test "Cuál es el presupuesto máximo de Aldo" {
	assert.equals(6000, fixture.aldo().ahorros())
	assert.equals(1200, fixture.aldo().presupuesto())
}

test "Aldo NO puede contratar a Raúl por defecto" {
	assert.equals(1225, raul.cotizar(fixture.aldo().casa().darSuperficie()))
	
	assert.notThat(fixture.aldo().puedeContratar(fixture.raul()))
}

test "Aldo puede contratar a Raul si ahorra 2000" {
	const aldo = fixture.aldo()
	
	aldo.ahorrar(2000)
	
	assert.equals(1600, aldo.presupuesto())
	
	assert.equals(1225, raul.cotizar(aldo.casa().darSuperficie()))
	
	assert.that(aldo.puedeContratar(fixture.raul()))
}

test "Aldo NO puede contratar a Raul si ahorra 1000 y la pintura se va 400 por lata" {
	const aldo = fixture.aldo()
	
	aldo.ahorrar(1000)
	
	manoEnLaLata.costoLata(400)
	
	assert.equals(1400, aldo.presupuesto())
	
	assert.equals(1425, raul.cotizar(aldo.casa().darSuperficie()))
	
	assert.notThat(aldo.puedeContratar(fixture.raul()))
}

test "Aldo puede contratar a Carlos" {
	assert.equals(1130, carlos.cotizar(fixture.aldo().casa().darSuperficie()))
	
	assert.that(fixture.aldo().puedeContratar(fixture.carlos()))
}

test "Aldo NO puede contratar a Venancio" {
	assert.equals(1200, fixture.aldo().presupuesto())
	
	assert.equals(1300, venancio.cotizar(fixture.aldo().casa().darSuperficie()))
	
	assert.notThat(fixture.aldo().puedeContratar(fixture.venancio()))
}

test "Aldo puede contratar a venancio si ahorra 2000" {
	const aldo = fixture.aldo()
	
	aldo.ahorrar(2000)
	
	assert.equals(1600, aldo.presupuesto())
	
	assert.equals(1300, venancio.cotizar(aldo.casa().darSuperficie()))
	
	assert.that(aldo.puedeContratar(fixture.venancio()))
} 

// A granel
test "Aldo puede contratar a Raul si usa pintura a granel" {
	laPintureria.pintureria(todoFluye)
	
	assert.equals(1200, fixture.aldo().presupuesto())
	
	const superficie = fixture.aldo().casa().darSuperficie() 
	
	assert.equals(1025, raul.cotizarManoDeObra(superficie))
	
	assert.equals(143.50, laPintureria.costoPintura(superficie))
	
	assert.equals(1168.50 , raul.cotizar(superficie))
	
	assert.that(fixture.aldo().puedeContratar(fixture.raul()))
}

test "Aldo puede contrar a venancio si usa pintura a granel" {
	laPintureria.pintureria(todoFluye)
	
	assert.equals(1200, fixture.aldo().presupuesto())
	
	const superficie = fixture.aldo().casa().darSuperficie() 
	
	assert.equals(1100, venancio.cotizarManoDeObra(superficie))
	
	assert.equals(143.50, laPintureria.costoPintura(superficie))
	
	assert.equals(1243.50, venancio.cotizar(superficie))
	
	assert.notThat(fixture.aldo().puedeContratar(fixture.venancio()))
}

// Test adicionales Aldo (parte 2)

test "Aldo puede contrar a Carlos, Eduardo y Roger" {
	const agencia = fixture.agenciaUNO()
	
	const contratables = agencia.puedeContratar( fixture.aldo() ).
		map { contratista => contratista.nombre() }
	
	assert.equals(3, contratables.size())
	assert.that(contratables.contains("Carlos" ))
	assert.that(contratables.contains("Eduardo"))
	assert.that(contratables.contains("Roger"  ))
}
 
test "Despues de que Aldo contrate a Roger su presupuesto es de 1160 pesos" {
	const aldo = fixture.aldo()
	
	assert.equals(1200, aldo.presupuesto())
	
	assert.equals(200, fixture.roger().darPresupuesto(aldo.casa()))
	
	aldo.contratar( fixture.roger() )
	
	assert.equals(1160, aldo.presupuesto())
}

test "Aldo recuerda las contrataciones que realizo" {
	const aldo = fixture.aldo()
	
	aldo.contratar( fixture.roger()  )
	aldo.contratar( fixture.carlos() )
	
	const contrataciones = aldo.contratos()
	
	assert.equals(2, contrataciones.size())
	
	const contratados = contrataciones.map{ contrato => contrato.contratista().nombre() }
	
	assert.that(contratados.contains("Roger" ))
	assert.that(contratados.contains("Carlos"))
}

test "Aldo intenta contratar a Aldo pero No puede" {
	const aldo = fixture.aldo()
	
	var falloLaContratacion = false
	
	try {
		aldo.contratar( fixture.aldo() )
	}
	catch ex : Exception 
		falloLaContratacion = true
			
	then always
		assert.that(falloLaContratacion)
}

test "Aldo NO fue descuidado al contratar a Roger y Carlos" {
	const aldo = fixture.aldo()
	
	aldo.contratar( fixture.roger()  )
	aldo.contratar( fixture.carlos() )
	
	assert.notThat( aldo.fueDescuidado() )
}

test "Aldo fue descuidado al contratar a Marcos pese a que ahorro 1.000.000" {
	const aldo = fixture.aldo()
	
	aldo.ahorrar(1000000) // 1.000.000
	
	// Marcos combra 100.000
	assert.equals(100000, fixture.marcos().darPresupuesto(aldo.casa()))
	
	aldo.contratar( fixture.marcos() )
	
	assert.that( aldo.fueDescuidado() )
}

